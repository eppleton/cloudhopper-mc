<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.cloudhopper.mc</groupId>
        <artifactId>cloudhopper-parent</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>demo</artifactId>
    <packaging>jar</packaging>
    <properties>
        <license.header.path>${project.parent.basedir}/src/license/header.txt</license.header.path>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.cloudhopper.mc</groupId>
            <artifactId>deployment-config-generator</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger.version}</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>2.1.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.cloudhopper.mc</groupId>
            <artifactId>provider-aws</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.cloudhopper.mc</groupId>
            <artifactId>deployment-config-api</artifactId>
            <version>1.0-SNAPSHOT</version>
            <type>jar</type>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.4</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <shadedClassifierName>${jar.classifier}</shadedClassifierName>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.cloudhopper.mc.demo.HelloWorldHandler</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-maven-plugin</artifactId>
                <version>2.2.22</version>
                <configuration>
                    <outputFileName>openapi</outputFileName>
                    <outputPath>${project.build.directory}/generated/openapi/${cloud.provider}</outputPath>
                    <outputFormat>JSONANDYAML</outputFormat>
                    <resourcePackages combine.children="append">
                        <package>com.cloudhopper.mc.demo</package>
                    </resourcePackages>
                    <prettyPrint>TRUE</prettyPrint>  
                </configuration>
                <executions>
                    <execution>
                        <id>default-openapi</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>resolve</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.swagger.codegen.v3</groupId>
                <artifactId>swagger-codegen-maven-plugin</artifactId>
                <version>3.0.55</version>
                <executions>
                    <execution>
                        <id>generate-html-docs</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.build.directory}/generated/openapi/${cloud.provider}/openapi.json</inputSpec>
                            <language>html2</language>
                            <output>${project.build.directory}/generated-docs/${cloud.provider}</output>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                    <release>11</release>  
                    <encoding>UTF-8</encoding>
                    <generatedSourcesDirectory>${output.dir}</generatedSourcesDirectory>
                    <annotationProcessors>
                        <annotationProcessor>com.cloudhopper.mc.deployment.config.generator.OperationProcessor</annotationProcessor>
                        <annotationProcessor>com.cloudhopper.mc.deployment.config.generator.ServerlessFunctionProcessor</annotationProcessor>
                    </annotationProcessors>
                    <compilerArgs>
                        <arg>-Acloudprovider=${cloud.provider}</arg>
                        <arg>-AconfigOutputDir=${project.build.directory}/deployment/${cloud.provider}</arg>
                        <arg>-AartifactId=${project.artifactId}</arg>
                        <arg>-Aversion=${project.version}</arg>
                        <arg>-Aclassifier=${jar.classifier}</arg>
                        <arg>-AtargetDir=${project.build.directory}</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>${jar.classifier}</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>attach-artifacts</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>${project.build.directory}/${project.build.finalName}-${jar.classifier}.jar</file>
                                    <type>jar</type>
                                    <classifier>${jar.classifier}</classifier>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>terraform-init</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>/opt/homebrew/bin/terraform</executable>
                            <workingDirectory>${project.build.directory}/deployment/${cloud.provider}</workingDirectory>
                            <arguments>
                                <argument>init</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>terraform-plan</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>/opt/homebrew/bin/terraform</executable>
                            <workingDirectory>${project.build.directory}/deployment/${cloud.provider}</workingDirectory>
                            <arguments>
                                <argument>plan</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!--                    <execution>
                        <id>terraform-apply</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>terraform</executable>
                            <workingDirectory>${project.build.directory}/deployment/${cloud.provider}</workingDirectory>
                            <arguments>
                                <argument>apply</argument>
                                <argument>-auto-approve</argument>
                                 If you want to use a specific var file 
                                 <argument>-var-file=${project.basedir}/terraform.tfvars</argument> 
                            </arguments>
                        </configuration>
                    </execution>-->
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-terraform-files</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/deployment/${cloud.provider}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/deployment/${cloud.provider}</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>      
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>gcp</id>
            <activation>      
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <cloud.provider>gcp</cloud.provider>
                <output.dir>target/generated-sources/gcp</output.dir>
                <jar.classifier>gcp</jar.classifier>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.cloudhopper.mc</groupId>
                    <artifactId>provider-gcp</artifactId>
                    <version>${project.version}</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>aws</id>
            <properties>
                <cloud.provider>aws</cloud.provider>
                <output.dir>target/generated-sources/aws</output.dir>
                <jar.classifier>aws</jar.classifier>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.swagger.core.v3</groupId>
                        <artifactId>swagger-maven-plugin</artifactId>
                        <version>2.2.22</version>
                        <configuration>
                            <resourcePackages >
                                <package>com.cloudhopper.mc.demo.aws</package>
                            </resourcePackages>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>aws2</id>    
            <properties>
                <cloud.provider>aws2</cloud.provider>
                <output.dir>target/generated-sources/aws2</output.dir>
                <jar.classifier>aws2</jar.classifier>
            </properties>
        </profile>
        <profile>
            <id>azure</id>
            <properties>
                <cloud.provider>azure</cloud.provider>
                <output.dir>target/generated-sources/azure</output.dir>
                <jar.classifier>azure</jar.classifier>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.cloudhopper.mc</groupId>
                    <artifactId>provider-azure</artifactId>
                    <version>${project.version}</version>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
