name: Pull Request Check

on:
  pull_request:
    branches:
      - main

jobs:
  archetype-test:
    name: Test Archetype with Terraform
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Run archetype tests
      working-directory: maven-archetype
      run: mvn -B clean verify
      
  build-and-validate:
    name: Build and Validate
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Verify with Maven
      run: mvn clean verify

    - name: Build with Maven
      run: mvn clean install

    - name: Build TCK image for Azure
      uses: docker/build-push-action@v6.17.0
      with:
        file: test/system-tests/generator-azure-terraform/Dockerfile.dockerfile
        tags: cloudhopper-tck-azure

    - name: Run TCK for Azure
      uses: addnab/docker-run-action@v3
      env:
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      with:
        image: cloudhopper-tck-azure:latest
        options: |
          -v ${{ github.workspace }}:/workspace
          -v /home/runner/.m2:/root/.m2
          -w /workspace
          -e ARM_SUBSCRIPTION_ID
          -e ARM_CLIENT_ID
          -e ARM_CLIENT_SECRET
          -e ARM_TENANT_ID
        run: |
          echo 'üîç Recompiling only system tests...'
          mvn -f /workspace/pom.xml install -DskipTests -pl test/system-tests/generator-azure-terraform &&
          echo '‚ñ∂ Running TCK...'
          cd /workspace/test/system-tests/generator-azure-terraform/
          mvn exec:java \
            -Dexec.mainClass=eu.cloudhopper.mc.test.system.tests.generator.azure.terraform.TckLauncher \
            -Dexec.classpathScope=test

    - name: Build TCK image for GCP
      uses: docker/build-push-action@v6.17.0
      with:
        file: test/system-tests/generator-gcp-terraform/Dockerfile.dockerfile
        tags: cloudhopper-tck-gcp

    - name: Set up GCP credentials
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      run: echo "$GOOGLE_APPLICATION_CREDENTIALS" > "/home/runner/gcp-key.json"

    - name: Run TCK for GCP
      uses: addnab/docker-run-action@v3
      with:
        image: cloudhopper-tck-gcp:latest
        options: |
          -v ${{ github.workspace }}:/workspace
          -v /home/runner/.m2:/root/.m2
          -v /home/runner/gcp-key.json:/root/gcp-key.json
          -w /workspace
          -e GOOGLE_APPLICATION_CREDENTIALS=/root/gcp-key.json
          -e GOOGLE_CLOUD_PROJECT=cloudhopper-tck
          -e GCP_PROJECT_ID=cloudhopper-tck
          -e GCP_REGION=us-central1
          -e TF_VAR_cloudscheduler_service_account_email=${{ secrets.CLOUDSCHEDULER_SERVICE_ACCOUNT_EMAIL }}
        run: |
          echo 'üîç Recompiling only system tests...'
          mvn -f /workspace/pom.xml install -DskipTests -pl test/system-tests/generator-gcp-terraform &&
          echo '‚ñ∂ Running TCK...'
          cd /workspace/test/system-tests/generator-gcp-terraform/
          mvn exec:java \
            -Dexec.mainClass=eu.cloudhopper.mc.test.system.tests.generator.gcp.terraform.TckLauncher \
            -Dexec.classpathScope=test

    - name: Build TCK image for AWS
      uses: docker/build-push-action@v6.17.0
      with:
        file: test/system-tests/generator-aws-terraform/Dockerfile.dockerfile
        tags: cloudhopper-tck-aws

    - name: Run TCK for AWS
      uses: addnab/docker-run-action@v3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ vars.AWS_REGION }}
      with:
        image: cloudhopper-tck-aws:latest
        options: |
          -v ${{ github.workspace }}:/workspace
          -v /home/runner/.m2:/root/.m2
          -w /workspace
          -e AWS_ACCESS_KEY_ID
          -e AWS_SECRET_ACCESS_KEY
          -e AWS_REGION
        run: |
          echo 'üîç Recompiling only system tests...'
          mvn -f /workspace/pom.xml install -DskipTests -pl test/system-tests/generator-aws-terraform &&
          echo '‚ñ∂ Running TCK...'
          cd /workspace/test/system-tests/generator-aws-terraform/
          mvn exec:java \
            -Dexec.mainClass=eu.cloudhopper.mc.test.system.tests.generator.aws.terraform.TckLauncher \
            -Dexec.classpathScope=test
