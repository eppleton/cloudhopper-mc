"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[480],{8453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>i});var t=n(6540);const s={},o=t.createContext(s);function d(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(o.Provider,{value:r},e.children)}},9595:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"modules/generator-gcp-terraform","title":"\u2601\ufe0f GCP Terraform Generator","description":"This module provides a Cloudhopper generator for deploying annotated Java functions as Google Cloud Functions (HTTP-triggered) using Terraform.","source":"@site/docs/modules/generator-gcp-terraform.md","sourceDirName":"modules","slug":"/modules/generator-gcp-terraform","permalink":"/cloudhopper-mc/docs/modules/generator-gcp-terraform","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"provider-azure","permalink":"/cloudhopper-mc/docs/modules/provider-azure"},"next":{"title":"provider-gcp","permalink":"/cloudhopper-mc/docs/modules/provider-gcp"}}');var s=n(4848),o=n(8453);const d={},i="\u2601\ufe0f GCP Terraform Generator",a={},c=[{value:"\ud83d\udce6 How to Use",id:"-how-to-use",level:2},{value:"1. Add the Maven dependency",id:"1-add-the-maven-dependency",level:3},{value:"2. Configure the annotation processor",id:"2-configure-the-annotation-processor",level:3},{value:"\ud83d\udcc1 Templates",id:"-templates",level:2},{value:"\ud83d\udd0c Template Registration",id:"-template-registration",level:2},{value:"\ud83d\udcc2 Output",id:"-output",level:2},{value:"\ud83e\udde9 What\u2019s Special About GCP",id:"-whats-special-about-gcp",level:2},{value:"\ud83d\udcda Related Modules",id:"-related-modules",level:2}];function l(e){const r={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"\ufe0f-gcp-terraform-generator",children:"\u2601\ufe0f GCP Terraform Generator"})}),"\n",(0,s.jsxs)(r.p,{children:["This module provides a Cloudhopper generator for deploying annotated Java functions as ",(0,s.jsx)(r.strong,{children:"Google Cloud Functions (HTTP-triggered)"})," using ",(0,s.jsx)(r.strong,{children:"Terraform"}),"."]}),"\n",(0,s.jsx)(r.p,{children:"It is used by the Cloudhopper annotation processor to generate:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"GCP-specific Java handler classes"}),"\n",(0,s.jsx)(r.li,{children:"Terraform infrastructure resources"}),"\n",(0,s.jsx)(r.li,{children:"Supporting metadata for integration and deployment"}),"\n"]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"-how-to-use",children:"\ud83d\udce6 How to Use"}),"\n",(0,s.jsx)(r.p,{children:"To use this generator in your own project, follow these steps:"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"1-add-the-maven-dependency",children:"1. Add the Maven dependency"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-xml",children:"<dependency>\n  <groupId>eu.cloudhopper.mc</groupId>\n  <artifactId>generator-gcp-terraform</artifactId>\n  <version>${cloudhopper.version}</version>\n</dependency>\n"})}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h3,{id:"2-configure-the-annotation-processor",children:"2. Configure the annotation processor"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-xml",children:"<plugin>\n  <artifactId>maven-compiler-plugin</artifactId>\n  <version>3.8.1</version>\n  <configuration>\n    <source>17</source>\n    <target>17</target>\n    <encoding>UTF-8</encoding>\n    <annotationProcessors>\n      <annotationProcessor>\n        eu.cloudhopper.mc.deployment.config.generator.ServerlessFunctionProcessor\n      </annotationProcessor>\n    </annotationProcessors>\n    <compilerArgs>\n      <arg>-Acloudprovider=gcp</arg>\n      <arg>-AgeneratorId=gcp-terraform-java21</arg>\n      <arg>-AconfigOutputDir=${project.build.directory}/deployment/gcp</arg>\n      <arg>-AtargetDir=${project.build.directory}</arg>\n      <arg>-AartifactId=${project.artifactId}</arg>\n      <arg>-Aversion=${project.version}</arg>\n      <arg>-Aclassifier=gcp</arg>\n    </compilerArgs>\n  </configuration>\n</plugin>\n"})}),"\n",(0,s.jsx)(r.p,{children:"This configuration ensures that the correct templates are applied and the output is structured for GCP."}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"-templates",children:"\ud83d\udcc1 Templates"}),"\n",(0,s.jsx)(r.p,{children:"Templates for this generator are located at:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"src/main/resources/templates/gcp/\n"})}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Template"}),(0,s.jsx)(r.th,{children:"Output Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"function.ftl"})}),(0,s.jsx)(r.td,{children:"Terraform"}),(0,s.jsx)(r.td,{children:"Defines GCP Cloud Function resource"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"api.ftl"})}),(0,s.jsx)(r.td,{children:"Terraform"}),(0,s.jsx)(r.td,{children:"API Gateway or routing proxy configuration"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"apiIntegration.ftl"})}),(0,s.jsx)(r.td,{children:"Terraform"}),(0,s.jsx)(r.td,{children:"Binds function with GCP API Gateway (if needed)"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"schedule.ftl"})}),(0,s.jsx)(r.td,{children:"Terraform"}),(0,s.jsx)(r.td,{children:"Scheduled (cron) job configuration via Cloud Scheduler"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"handler.ftl"})}),(0,s.jsx)(r.td,{children:"Java"}),(0,s.jsx)(r.td,{children:"Generates function class that wraps the logic"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"shared.ftl"})}),(0,s.jsx)(r.td,{children:"Terraform"}),(0,s.jsx)(r.td,{children:"Common infrastructure like IAM roles, logging, etc."})]})]})]}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:["\u2139\ufe0f The ",(0,s.jsx)(r.code,{children:"doc/"})," folder in the template path is not used during generation. It may contain examples or template prototypes."]}),"\n"]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"-template-registration",children:"\ud83d\udd0c Template Registration"}),"\n",(0,s.jsx)(r.p,{children:"This generator registers itself using:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:'@TemplateRegistration(\n    generatorId = "gcp-terraform-java21",\n    templates = {\n        @Template(name = "handler", phase = GenerationPhase.SOURCES),\n        @Template(name = "function", phase = GenerationPhase.DEPLOYMENT),\n        @Template(name = "api", phase = GenerationPhase.DEPLOYMENT),\n        @Template(name = "apiIntegration", phase = GenerationPhase.DEPLOYMENT),\n        @Template(name = "schedule", phase = GenerationPhase.DEPLOYMENT),\n        @Template(name = "shared", phase = GenerationPhase.DEPLOYMENT)\n    }\n)\npublic class GcpTerraformJava21TemplateRegistration { ... }\n'})}),"\n",(0,s.jsxs)(r.p,{children:["This registration is auto-discovered using Java\u2019s SPI (",(0,s.jsx)(r.code,{children:"META-INF/services/..."}),") mechanism."]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"-output",children:"\ud83d\udcc2 Output"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Artifact"}),(0,s.jsx)(r.th,{children:"Location"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Java handler classes"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"target/generated-sources/gcp/"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Terraform configuration"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"target/deployment/gcp/*.tf"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Deployment metadata"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"target/classes/META-INF/cloudhopper/"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Optional ZIP for deployment"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"target/${artifactId}-${version}-gcp.zip"})})]})]})]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"-whats-special-about-gcp",children:"\ud83e\udde9 What\u2019s Special About GCP"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Handler Generation"}),": The generator produces a Java class that implements ",(0,s.jsx)(r.code,{children:"com.google.cloud.functions.HttpFunction"}),"."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Context Mapping"}),": The handler uses ",(0,s.jsx)(r.code,{children:"GcpCloudFunctionRequestHandler"}),", which adapts GCP\u2019s request/response and environment into Cloudhopper's ",(0,s.jsx)(r.code,{children:"CloudRequestHandler"})," interface."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"Terraform Output"}),": The generated ",(0,s.jsx)(r.code,{children:".tf"})," files define the Cloud Function, IAM permissions, and optional API Gateway or scheduler bindings."]}),"\n"]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"-related-modules",children:"\ud83d\udcda Related Modules"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Module"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"provider-gcp"})}),(0,s.jsxs)(r.td,{children:["Contains ",(0,s.jsx)(r.code,{children:"GcpCloudFunctionRequestHandler"})," used by handlers"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"deployment-config-api"})}),(0,s.jsx)(r.td,{children:"Defines annotations and runtime interfaces"})]})]})]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)(r.p,{children:["\ud83d\udcdd ",(0,s.jsx)(r.em,{children:"Use this generator to compile and deploy Cloudhopper functions as Google Cloud Functions using Terraform."})]})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);